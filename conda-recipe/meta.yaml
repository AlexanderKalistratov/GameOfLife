package:
  name: game-of-life-demo
  version: {{ GIT_DESCRIBE_TAG }}

source:
  path: ..

build:
  entry_points:
    - game_of_life = game_of_life_demo.game_of_life:main
  number: {{ GIT_DESCRIBE_NUMBER }}
  script_env:
    - WHEELS_OUTPUT_FOLDER

test:
  requires:
    - pytest =7.1.2
    - pytest-cov
    - pytest-mock =3.10.0
    - numpy <1.24
    - scipy
    - numba >=0.56.4
    - dpnp
    - dpctl
    - numba-dpex

  imports:
    - game_of_life_demo

requirements:
  build:
  host:
    - python
    - setuptools =65.6.3
    - git
    - wheel =0.38.4
    - numpy
    - numba >=0.56.4
    - opencv =4.6.0
    - dpnp
    - dpctl
    - numba-dpex

  run:
    - python
    - numpy <1.24
    - scipy
    - numba >=0.56.4
    - opencv =4.6.0
    - dpnp
    - dpctl
    - numba-dpex

about:
  home: https://github.com/samaid/game-of-life-demo
  summary: Conway's Game-Of-Life
  description: |
    The Game of Life is a cellular automaton devised by John Horton Conway in 1970.
    This demo provides multiple implementations using different libraries/tools for CPU and GPU:
    * `numpy` - pure NumPy implementation that runs on CPU only
    * `numba` - Numba implementation that runs on CPU only
    * `dpnp` - adapted `numpy` implementation that can run on both CPU and GPU
    * `numba-dpex` - adapted `numba` implementation that can run on both CPU and GPU
    Running: game_of_life [command line options]
    * `--variant [numba, numpy]` (default `numpy`) - implementation variant
    * `--threading-layer [omp, tbb, workqueue]` (default `omp`) - threading layer for `numba` implementation
    * `--parallel` (default) or `--no-parallel` - keyword argument `parallel=` for `@njit`.
      Used along with `--variant numba`
    * `--frames-count` - stop rendering after a specified amount of frames. Default 0 meaning that the demo
      does not stop until user action, e.g. close window
    * `--gui` (default) or `--no-gui` - render the evolution of the grid or do the computation only and
      print performance statistics in the end.
    * `--stats` (default) or `--no-stats` - Display statistics in gui while running or not
    * `--task-size` - size of the grid WIDTH, HEIGHT. Example: `960,540` (default)
  license: BSD-2
